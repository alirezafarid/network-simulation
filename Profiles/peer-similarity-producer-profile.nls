;top-k random
breed [peer-similarity-producer-profiles peer-similarity-producer-profile]

to-report peer-similarity-producer-profiles-rank
  let rank-list topk-peer-similarity-with-memory
  set rank-list smart-sublist rank-list max-k
  draw-memories rank-list
  report rank-list
end

to-report peer-similarity-producer-profiles-payoff 
  let reward 1.5
  let punishment  0.5
  let turncost  0
  report  score-producer 
end

to-report peer-similarity-producer-profiles-like
  let like-list like-tags-in-topk
  draw-connections like-list
  report like-list
end

to-report peer-similarity-producer-profiles-follow  
  
  let like-list like-tags-in-topk
  let peers []
  ask connect-links with [ member? end2 like-list = true and end1 != myself]
  [ set peers lput end1 peers]
  set peers remove-duplicates peers
  report  follow-peers peers
end

to-report peer-similarity-producer-profiles-publish
 
  report [] 
end

to-report peer-similarity-producer-profiles-leave? 
  leave-join-network
  report active?
end
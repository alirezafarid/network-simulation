;top-k random
breed [random-profiles random-profile]

to-report random-profiles-rank
  let rank-list topk-random
  ;let remembered-turtles ([end2] of my-out-memory-links)
  ;set rank-list filter [not member? ? remembered-turtles] rank-list
  set rank-list smart-sublist rank-list max-k
  draw-memories rank-list
  report rank-list
end

to-report random-profiles-payoff 
  let reward 1.5
  let punishment 4
  report score-new-with-penalty reward punishment
end

to-report random-profiles-like
;  let like-list like-tags-in-topk
;  draw-connections like-list
;  report like-list
  report []
end

to-report random-profiles-follow
;  let candidates topm-from-liked-in-topk
;  let remembered-turtles ([end2] of my-out-memory-links)
;  set candidates filter [not member? ? remembered-turtles] candidates
;  set candidates smart-sublist candidates max-m
;  draw-memories candidates
;  
;  let follow-list follow-everyone candidates
;  draw-connections follow-list
;  
;  report follow-list
  report []
end

to-report random-profiles-publish
  let threshold 4
  let cost 4
  let chance 0.1
  report publish-with-threshold-and-cost threshold cost
end

to-report random-profiles-leave? 
  leave-join-network
  report active?
end